name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Grant execute permission for gradlew
        run: chmod +x ./Spring/gradlew

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build project
        run: |
          cd Spring
          ./gradlew clean build

      - name: Create SSH key file
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem

      - name: Generate api.properties file
        run: |
          echo "KOKOA_RESTFUL_API=${{ secrets.KOKOA_RESTFUL_API }}" > Spring/src/main/resources/api.properties
          echo "KOKOA_JAVASCRIPT_API=${{ secrets.KOKOA_JAVASCRIPT_API }}" >> Spring/src/main/resources/api.properties

      - name: Copy files to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ec2-user
        run: |
          scp -o StrictHostKeyChecking=no -i private_key.pem ./Spring/build/libs/PublicWC-0.0.1-SNAPSHOT.jar $EC2_USER@$EC2_HOST:/home/ec2-user/

      - name: Run JAR file on EC2 in background
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ec2-user
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key.pem $EC2_USER@$EC2_HOST "
           nohup java -jar /home/ec2-user/PublicWC-0.0.1-SNAPSHOT.jar > /home/ec2-user/application.log 2>&1 &
          "

      - name: Clean up SSH key and properties file
        if: always()
        run: |
          rm -f private_key.pem
          rm -f api.properties
